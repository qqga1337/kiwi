variables:
    DOCKER_DRIVER: overlay
    VERSION: 1.0.{CI_PIPLINE_ID}
stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - tag
  - deploy

#unit-test-job:   # This job runs in the test stage.
#  stage: test    # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests... This will take about 60 seconds."
#    - sleep 60
#    - echo "Code coverage is 90%"
#
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  services: 
    - docker:20.10.16-dind
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Compiling the code..."
    - >
      docker build
      --no-cache
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/app:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/app:$CI_COMMIT_SHA
    - echo "Compile complete."

tag-job:
  stage: tag
  services:
    - docker:20.10.16-dind
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - if: '$CI_COMMIT_BRANCH != "main"'
      when: never
  
  script:
    - docker pull $CI_REGISTRY_IMAGE/app:$CI_COMMIT_SHA 
    - docker tag $CI_REGISTRY_IMAGE/app:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/app:latest
    - docker push $CI_REGISTRY_IMAGE/app:latest

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  
  image: ubuntu
  before_script:
    - apt update
    - apt install -y openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Deploying application..."
    - ssh ${SSH_USER}@${C_PROD} "mkdir -p ~/app"
    - scp ./nginx.tmpl ${SSH_USER}@${C_PROD}:~/app/nginx.tmpl
    - scp ./docker-compose.yml ${SSH_USER}@${C_PROD}:~/app/
    - scp ./deploy.sh ${SSH_USER}@${C_PROD}:~/app/deploy.sh
    - ssh ${SSH_USER}@${C_PROD}
      "export "CI_REGISTRY_USER=$CI_REGISTRY_USER";
      export "DATABASE_SERVER=$DATABASE_SERVER";
      export "CI_REGISTRY_PASSWORD=$CI_REGISTRY_PASWWORD";
      export "CI_REGISTRY=$CI_REGISTRY";
      /bin/bash -s " < ./deploy.sh
